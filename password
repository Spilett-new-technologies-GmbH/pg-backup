[4mPG_DUMP[24m(1)                                                                                                       PostgreSQL 16.1 Documentation                                                                                                      [4mPG_DUMP[24m(1)

[1mNAME[0m
       pg_dump - extract a PostgreSQL database into a script file or other archive file

[1mSYNOPSIS[0m

       [1mpg_dump [22m[[4mconnection-option[24m...] [[4moption[24m...] [[4mdbname[24m]

[1mDESCRIPTION[0m
       pg_dump is a utility for backing up a PostgreSQL database. It makes consistent backups even if the database is being used concurrently.  pg_dump does not block other users accessing the database (readers or writers).

       pg_dump only dumps a single database. To back up an entire cluster, or to back up global objects that are common to all databases in a cluster (such as roles and tablespaces), use [1mpg_dumpall[22m(1).

       Dumps can be output in script or archive file formats. Script dumps are plain-text files containing the SQL commands required to reconstruct the database to the state it was in at the time it was saved. To restore from such a script, feed it to
       [1mpsql[22m(1). Script files can be used to reconstruct the database even on other machines and other architectures; with some modifications, even on other SQL database products.

       The alternative archive file formats must be used with [1mpg_restore[22m(1) to rebuild the database. They allow pg_restore to be selective about what is restored, or even to reorder the items prior to being restored. The archive file formats are designed
       to be portable across architectures.

       When used with one of the archive file formats and combined with pg_restore, pg_dump provides a flexible archival and transfer mechanism.  pg_dump can be used to backup an entire database, then pg_restore can be used to examine the archive and/or
       select which parts of the database are to be restored. The most flexible output file formats are the ‚Äúcustom‚Äù format ([1m-Fc[22m) and the ‚Äúdirectory‚Äù format ([1m-Fd[22m). They allow for selection and reordering of all archived items, support parallel
       restoration, and are compressed by default. The ‚Äúdirectory‚Äù format is the only format that supports parallel dumps.

       While running pg_dump, one should examine the output for any warnings (printed on standard error), especially in light of the limitations listed below.

[1mOPTIONS[0m
       The following command-line options control the content and format of the output.

       [4mdbname[0m
           Specifies the name of the database to be dumped. If this is not specified, the environment variable [1mPGDATABASE [22mis used. If that is not set, the user name specified for the connection is used.

       [1m-a[0m
       [1m--data-only[0m
           Dump only the data, not the schema (data definitions). Table data, large objects, and sequence values are dumped.

           This option is similar to, but for historical reasons not identical to, specifying [1m--section=data[22m.

       [1m-b[0m
       [1m--large-objects[0m
       [1m--blobs [22m(deprecated)
           Include large objects in the dump. This is the default behavior except when [1m--schema[22m, [1m--table[22m, or [1m--schema-only [22mis specified. The [1m-b [22mswitch is therefore only useful to add large objects to dumps where a specific schema or table has been
           requested. Note that large objects are considered data and therefore will be included when [1m--data-only [22mis used, but not when [1m--schema-only [22mis.

       [1m-B[0m
       [1m--no-large-objects[0m
       [1m--no-blobs [22m(deprecated)
           Exclude large objects in the dump.

           When both [1m-b [22mand [1m-B [22mare given, the behavior is to output large objects, when data is being dumped, see the [1m-b [22mdocumentation.

       [1m-c[0m
       [1m--clean[0m
           Output commands to [1mDROP [22mall the dumped database objects prior to outputting the commands for creating them. This option is useful when the restore is to overwrite an existing database. If any of the objects do not exist in the destination
           database, ignorable error messages will be reported during restore, unless [1m--if-exists [22mis also specified.

           This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call [1mpg_restore[22m.

       [1m-C[0m
       [1m--create[0m
           Begin the output with a command to create the database itself and reconnect to the created database. (With a script of this form, it doesn't matter which database in the destination installation you connect to before running the script.) If
           [1m--clean [22mis also specified, the script drops and recreates the target database before reconnecting to it.

           With [1m--create[22m, the output also includes the database's comment if any, and any configuration variable settings that are specific to this database, that is, any [1mALTER DATABASE ... SET ...  [22mand [1mALTER ROLE ... IN DATABASE ... SET ...  [22mcommands
           that mention this database. Access privileges for the database itself are also dumped, unless [1m--no-acl [22mis specified.

           This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call [1mpg_restore[22m.

       [1m-e [4m[22mpattern[0m
       [1m--extension=[4m[22mpattern[0m
           Dump only extensions matching [4mpattern[24m. When this option is not specified, all non-system extensions in the target database will be dumped. Multiple extensions can be selected by writing multiple [1m-e [22mswitches. The [4mpattern[24m parameter is
           interpreted as a pattern according to the same rules used by psql's \d commands (see Patterns), so multiple extensions can also be selected by writing wildcard characters in the pattern. When using wildcards, be careful to quote the pattern if
           needed to prevent the shell from expanding the wildcards.

           Any configuration relation registered by [1mpg_extension_config_dump [22mis included in the dump if its extension is specified by [1m--extension[22m.

               [1mNote[0m
               When [1m-e [22mis specified, pg_dump makes no attempt to dump any other database objects that the selected extension(s) might depend upon. Therefore, there is no guarantee that the results of a specific-extension dump can be successfully restored
               by themselves into a clean database.

       [1m-E [4m[22mencoding[0m
       [1m--encoding=[4m[22mencoding[0m
           Create the dump in the specified character set encoding. By default, the dump is created in the database encoding. (Another way to get the same result is to set the [1mPGCLIENTENCODING [22menvironment variable to the desired dump encoding.) The
           supported encodings are described in Section 24.3.1.

       [1m-f [4m[22mfile[0m
       [1m--file=[4m[22mfile[0m
           Send output to the specified file. This parameter can be omitted for file based output formats, in which case the standard output is used. It must be given for the directory output format however, where it specifies the target directory
           instead of a file. In this case the directory is created by [1mpg_dump [22mand must not exist before.

       [1m-F [4m[22mformat[0m
       [1m--format=[4m[22mformat[0m
           Selects the format of the output.  [4mformat[24m can be one of the following:

           p
           plain
               Output a plain-text SQL script file (the default).

           c
           custom
               Output a custom-format archive suitable for input into pg_restore. Together with the directory output format, this is the most flexible output format in that it allows manual selection and reordering of archived items during restore. This
               format is also compressed by default.

           d
           directory
               Output a directory-format archive suitable for input into pg_restore. This will create a directory with one file for each table and large object being dumped, plus a so-called Table of Contents file describing the dumped objects in a
               machine-readable format that pg_restore can read. A directory format archive can be manipulated with standard Unix tools; for example, files in an uncompressed archive can be compressed with the gzip, lz4, or zstd tools. This format is
               compressed by default using gzip and also supports parallel dumps.

           t
           tar
               Output a [1mtar[22m-format archive suitable for input into pg_restore. The tar format is compatible with the directory format: extracting a tar-format archive produces a valid directory-format archive. However, the tar format does not support
               compression. Also, when using tar format the relative order of table data items cannot be changed during restore.

       [1m-j [4m[22mnjobs[0m
       [1m--jobs=[4m[22mnjobs[0m
           Run the dump in parallel by dumping [4mnjobs[24m tables simultaneously. This option may reduce the time needed to perform the dump but it also increases the load on the database server. You can only use this option with the directory output format
           because this is the only output format where multiple processes can write their data at the same time.

           pg_dump will open [4mnjobs[24m + 1 connections to the database, so make sure your max_connections setting is high enough to accommodate all connections.

           Requesting exclusive locks on database objects while running a parallel dump could cause the dump to fail. The reason is that the pg_dump leader process requests shared locks (ACCESS SHARE) on the objects that the worker processes are going to
           dump later in order to make sure that nobody deletes them and makes them go away while the dump is running. If another client then requests an exclusive lock on a table, that lock will not be granted but will be queued waiting for the shared
           lock of the leader process to be released. Consequently any other access to the table will not be granted either and will queue after the exclusive lock request. This includes the worker process trying to dump the table. Without any
           precautions this would be a classic deadlock situation. To detect this conflict, the pg_dump worker process requests another shared lock using the NOWAIT option. If the worker process is not granted this shared lock, somebody else must have
           requested an exclusive lock in the meantime and there is no way to continue with the dump, so pg_dump has no choice but to abort the dump.

           To perform a parallel dump, the database server needs to support synchronized snapshots, a feature that was introduced in PostgreSQL 9.2 for primary servers and 10 for standbys. With this feature, database clients can ensure they see the same
           data set even though they use different connections.  [1mpg_dump -j [22muses multiple database connections; it connects to the database once with the leader process and once again for each worker job. Without the synchronized snapshot feature, the
           different worker jobs wouldn't be guaranteed to see the same data in each connection, which could lead to an inconsistent backup.

       [1m-n [4m[22mpattern[0m
       [1m--schema=[4m[22mpattern[0m
           Dump only schemas matching [4mpattern[24m; this selects both the schema itself, and all its contained objects. When this option is not specified, all non-system schemas in the target database will be dumped. Multiple schemas can be selected by
           writing multiple [1m-n [22mswitches. The [4mpattern[24m parameter is interpreted as a pattern according to the same rules used by psql's \d commands (see Patterns), so multiple schemas can also be selected by writing wildcard characters in the pattern. When
           using wildcards, be careful to quote the pattern if needed to prevent the shell from expanding the wildcards; see Examples below.

               [1mNote[0m
               When [1m-n [22mis specified, pg_dump makes no attempt to dump any other database objects that the selected schema(s) might depend upon. Therefore, there is no guarantee that the results of a specific-schema dump can be successfully restored by
               themselves into a clean database.

               [1mNote[0m
               Non-schema objects such as large objects are not dumped when [1m-n [22mis specified. You can add large objects back to the dump with the [1m--large-objects [22mswitch.

       [1m-N [4m[22mpattern[0m
       [1m--exclude-schema=[4m[22mpattern[0m
           Do not dump any schemas matching [4mpattern[24m. The pattern is interpreted according to the same rules as for [1m-n[22m.  [1m-N [22mcan be given more than once to exclude schemas matching any of several patterns.

           When both [1m-n [22mand [1m-N [22mare given, the behavior is to dump just the schemas that match at least one [1m-n [22mswitch but no [1m-N [22mswitches. If [1m-N [22mappears without [1m-n[22m, then schemas matching [1m-N [22mare excluded from what is otherwise a normal dump.

       [1m-O[0m
       [1m--no-owner[0m
           Do not output commands to set ownership of objects to match the original database. By default, pg_dump issues [1mALTER OWNER [22mor [1mSET SESSION AUTHORIZATION [22mstatements to set ownership of created database objects. These statements will fail when the
           script is run unless it is started by a superuser (or the same user that owns all of the objects in the script). To make a script that can be restored by any user, but will give that user ownership of all the objects, specify [1m-O[22m.

           This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call [1mpg_restore[22m.

       [1m-R[0m
       [1m--no-reconnect[0m
           This option is obsolete but still accepted for backwards compatibility.

       [1m-s[0m
       [1m--schema-only[0m
           Dump only the object definitions (schema), not data.

           This option is the inverse of [1m--data-only[22m. It is similar to, but for historical reasons not identical to, specifying [1m--section=pre-data --section=post-data[22m.

           (Do not confuse this with the [1m--schema [22moption, which uses the word ‚Äúschema‚Äù in a different meaning.)

           To exclude table data for only a subset of tables in the database, see [1m--exclude-table-data[22m.

       [1m-S [4m[22musername[0m
       [1m--superuser=[4m[22musername[0m
           Specify the superuser user name to use when disabling triggers. This is relevant only if [1m--disable-triggers [22mis used. (Usually, it's better to leave this out, and instead start the resulting script as superuser.)

       [1m-t [4m[22mpattern[0m
       [1m--table=[4m[22mpattern[0m
           Dump only tables with names matching [4mpattern[24m. Multiple tables can be selected by writing multiple [1m-t [22mswitches. The [4mpattern[24m parameter is interpreted as a pattern according to the same rules used by psql's \d commands (see Patterns), so multiple
           tables can also be selected by writing wildcard characters in the pattern. When using wildcards, be careful to quote the pattern if needed to prevent the shell from expanding the wildcards; see Examples below.

           As well as tables, this option can be used to dump the definition of matching views, materialized views, foreign tables, and sequences. It will not dump the contents of views or materialized views, and the contents of foreign tables will only
           be dumped if the corresponding foreign server is specified with [1m--include-foreign-data[22m.

           The [1m-n [22mand [1m-N [22mswitches have no effect when [1m-t [22mis used, because tables selected by [1m-t [22mwill be dumped regardless of those switches, and non-table objects will not be dumped.

               [1mNote[0m
               When [1m-t [22mis specified, pg_dump makes no attempt to dump any other database objects that the selected table(s) might depend upon. Therefore, there is no guarantee that the results of a specific-table dump can be successfully restored by
               themselves into a clean database.

       [1m-T [4m[22mpattern[0m
       [1m--exclude-table=[4m[22mpattern[0m
           Do not dump any tables matching [4mpattern[24m. The pattern is interpreted according to the same rules as for [1m-t[22m.  [1m-T [22mcan be given more than once to exclude tables matching any of several patterns.

           When both [1m-t [22mand [1m-T [22mare given, the behavior is to dump just the tables that match at least one [1m-t [22mswitch but no [1m-T [22mswitches. If [1m-T [22mappears without [1m-t[22m, then tables matching [1m-T [22mare excluded from what is otherwise a normal dump.

       [1m-v[0m
       [1m--verbose[0m
           Specifies verbose mode. This will cause pg_dump to output detailed object comments and start/stop times to the dump file, and progress messages to standard error. Repeating the option causes additional debug-level messages to appear on
           standard error.

       [1m-V[0m
       [1m--version[0m
           Print the pg_dump version and exit.

       [1m-x[0m
       [1m--no-privileges[0m
       [1m--no-acl[0m
           Prevent dumping of access privileges (grant/revoke commands).

       [1m-Z [4m[22mlevel[0m
       [1m-Z [4m[22mmethod[24m[:[4mdetail[24m]
       [1m--compress=[4m[22mlevel[0m
       [1m--compress=[4m[22mmethod[24m[:[4mdetail[24m]
           Specify the compression method and/or the compression level to use. The compression method can be set to gzip, lz4, zstd, or none for no compression. A compression detail string can optionally be specified. If the detail string is an integer,
           it specifies the compression level. Otherwise, it should be a comma-separated list of items, each of the form keyword or keyword=value. Currently, the supported keywords are level and long.

           If no compression level is specified, the default compression level will be used. If only a level is specified without mentioning an algorithm, gzip compression will be used if the level is greater than 0, and no compression will be used if
           the level is 0.

           For the custom and directory archive formats, this specifies compression of individual table-data segments, and the default is to compress using gzip at a moderate level. For plain text output, setting a nonzero compression level causes the
           entire output file to be compressed, as though it had been fed through gzip, lz4, or zstd; but the default is not to compress. With zstd compression, long mode may improve the compression ratio, at the cost of increased memory use.

           The tar archive format currently does not support compression at all.

       [1m--binary-upgrade[0m
           This option is for use by in-place upgrade utilities. Its use for other purposes is not recommended or supported. The behavior of the option may change in future releases without notice.

       [1m--column-inserts[0m
       [1m--attribute-inserts[0m
           Dump data as [1mINSERT [22mcommands with explicit column names (INSERT INTO [4mtable[24m ([4mcolumn[24m, ...) VALUES ...). This will make restoration very slow; it is mainly useful for making dumps that can be loaded into non-PostgreSQL databases. Any error during
           restoring will cause only rows that are part of the problematic [1mINSERT [22mto be lost, rather than the entire table contents.

       [1m--disable-dollar-quoting[0m
           This option disables the use of dollar quoting for function bodies, and forces them to be quoted using SQL standard string syntax.

       [1m--disable-triggers[0m
           This option is relevant only when creating a data-only dump. It instructs pg_dump to include commands to temporarily disable triggers on the target tables while the data is restored. Use this if you have referential integrity checks or other
           triggers on the tables that you do not want to invoke during data restore.

           Presently, the commands emitted for [1m--disable-triggers [22mmust be done as superuser. So, you should also specify a superuser name with [1m-S[22m, or preferably be careful to start the resulting script as a superuser.

           This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call [1mpg_restore[22m.

       [1m--enable-row-security[0m
           This option is relevant only when dumping the contents of a table which has row security. By default, pg_dump will set row_security to off, to ensure that all data is dumped from the table. If the user does not have sufficient privileges to
           bypass row security, then an error is thrown. This parameter instructs pg_dump to set row_security to on instead, allowing the user to dump the parts of the contents of the table that they have access to.

           Note that if you use this option currently, you probably also want the dump be in [1mINSERT [22mformat, as the [1mCOPY FROM [22mduring restore does not support row security.

       [1m--exclude-table-and-children=[4m[22mpattern[0m
           This is the same as the [1m-T[22m/[1m--exclude-table [22moption, except that it also excludes any partitions or inheritance child tables of the table(s) matching the [4mpattern[24m.

       [1m--exclude-table-data=[4m[22mpattern[0m
           Do not dump data for any tables matching [4mpattern[24m. The pattern is interpreted according to the same rules as for [1m-t[22m.  [1m--exclude-table-data [22mcan be given more than once to exclude tables matching any of several patterns. This option is useful
           when you need the definition of a particular table even though you do not need the data in it.

           To exclude data for all tables in the database, see [1m--schema-only[22m.

       [1m--exclude-table-data-and-children=[4m[22mpattern[0m
           This is the same as the [1m--exclude-table-data [22moption, except that it also excludes data of any partitions or inheritance child tables of the table(s) matching the [4mpattern[24m.

       [1m--extra-float-digits=[4m[22mndigits[0m
           Use the specified value of [1mextra_float_digits [22mwhen dumping floating-point data, instead of the maximum available precision. Routine dumps made for backup purposes should not use this option.

       [1m--if-exists[0m
           Use DROP ... IF EXISTS commands to drop objects in [1m--clean [22mmode. This suppresses ‚Äúdoes not exist‚Äù errors that might otherwise be reported. This option is not valid unless [1m--clean [22mis also specified.

       [1m--include-foreign-data=[4m[22mforeignserver[0m
           Dump the data for any foreign table with a foreign server matching [4mforeignserver[24m pattern. Multiple foreign servers can be selected by writing multiple [1m--include-foreign-data [22mswitches. Also, the [4mforeignserver[24m parameter is interpreted as a
           pattern according to the same rules used by psql's \d commands (see Patterns), so multiple foreign servers can also be selected by writing wildcard characters in the pattern. When using wildcards, be careful to quote the pattern if needed to
           prevent the shell from expanding the wildcards; see Examples below. The only exception is that an empty pattern is disallowed.

               [1mNote[0m
               When [1m--include-foreign-data [22mis specified, pg_dump does not check that the foreign table is writable. Therefore, there is no guarantee that the results of a foreign table dump can be successfully restored.

       [1m--inserts[0m
           Dump data as [1mINSERT [22mcommands (rather than [1mCOPY[22m). This will make restoration very slow; it is mainly useful for making dumps that can be loaded into non-PostgreSQL databases. Any error during restoring will cause only rows that are part of the
           problematic [1mINSERT [22mto be lost, rather than the entire table contents. Note that the restore might fail altogether if you have rearranged column order. The [1m--column-inserts [22moption is safe against column order changes, though even slower.

       [1m--load-via-partition-root[0m
           When dumping data for a table partition, make the [1mCOPY [22mor [1mINSERT [22mstatements target the root of the partitioning hierarchy that contains it, rather than the partition itself. This causes the appropriate partition to be re-determined for each
           row when the data is loaded. This may be useful when restoring data on a server where rows do not always fall into the same partitions as they did on the original server. That could happen, for example, if the partitioning column is of type
           text and the two systems have different definitions of the collation used to sort the partitioning column.

       [1m--lock-wait-timeout=[4m[22mtimeout[0m
           Do not wait forever to acquire shared table locks at the beginning of the dump. Instead fail if unable to lock a table within the specified [4mtimeout[24m. The timeout may be specified in any of the formats accepted by [1mSET statement_timeout[22m. (Allowed
           formats vary depending on the server version you are dumping from, but an integer number of milliseconds is accepted by all versions.)

       [1m--no-comments[0m
           Do not dump comments.

       [1m--no-publications[0m
           Do not dump publications.

       [1m--no-security-labels[0m
           Do not dump security labels.

       [1m--no-subscriptions[0m
           Do not dump subscriptions.

       [1m--no-sync[0m
           By default, [1mpg_dump [22mwill wait for all files to be written safely to disk. This option causes [1mpg_dump [22mto return without waiting, which is faster, but means that a subsequent operating system crash can leave the dump corrupt. Generally, this
           option is useful for testing but should not be used when dumping data from production installation.

       [1m--no-table-access-method[0m
           Do not output commands to select table access methods. With this option, all objects will be created with whichever table access method is the default during restore.

           This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call [1mpg_restore[22m.

       [1m--no-tablespaces[0m
           Do not output commands to select tablespaces. With this option, all objects will be created in whichever tablespace is the default during restore.

           This option is ignored when emitting an archive (non-text) output file. For the archive formats, you can specify the option when you call [1mpg_restore[22m.

       [1m--no-toast-compression[0m
           Do not output commands to set TOAST compression methods. With this option, all columns will be restored with the default compression setting.

       [1m--no-unlogged-table-data[0m
           Do not dump the contents of unlogged tables and sequences. This option has no effect on whether or not the table and sequence definitions (schema) are dumped; it only suppresses dumping the table and sequence data. Data in unlogged tables and
           sequences is always excluded when dumping from a standby server.

       [1m--on-conflict-do-nothing[0m
           Add ON CONFLICT DO NOTHING to [1mINSERT [22mcommands. This option is not valid unless [1m--inserts[22m, [1m--column-inserts [22mor [1m--rows-per-insert [22mis also specified.

       [1m--quote-all-identifiers[0m
           Force quoting of all identifiers. This option is recommended when dumping a database from a server whose PostgreSQL major version is different from pg_dump's, or when the output is intended to be loaded into a server of a different major
           version. By default, pg_dump quotes only identifiers that are reserved words in its own major version. This sometimes results in compatibility issues when dealing with servers of other versions that may have slightly different sets of reserved
           words. Using [1m--quote-all-identifiers [22mprevents such issues, at the price of a harder-to-read dump script.

       [1m--rows-per-insert=[4m[22mnrows[0m
           Dump data as [1mINSERT [22mcommands (rather than [1mCOPY[22m). Controls the maximum number of rows per [1mINSERT [22mcommand. The value specified must be a number greater than zero. Any error during restoring will cause only rows that are part of the problematic
           [1mINSERT [22mto be lost, rather than the entire table contents.

       [1m--section=[4m[22msectionname[0m
           Only dump the named section. The section name can be [1mpre-data[22m, [1mdata[22m, or [1mpost-data[22m. This option can be specified more than once to select multiple sections. The default is to dump all sections.

           The data section contains actual table data, large-object contents, and sequence values. Post-data items include definitions of indexes, triggers, rules, and constraints other than validated check constraints. Pre-data items include all other
           data definition items.

       [1m--serializable-deferrable[0m
           Use a serializable transaction for the dump, to ensure that the snapshot used is consistent with later database states; but do this by waiting for a point in the transaction stream at which no anomalies can be present, so that there isn't a
           risk of the dump failing or causing other transactions to roll back with a serialization_failure. See Chapter 13 for more information about transaction isolation and concurrency control.

           This option is not beneficial for a dump which is intended only for disaster recovery. It could be useful for a dump used to load a copy of the database for reporting or other read-only load sharing while the original database continues to be
           updated. Without it the dump may reflect a state which is not consistent with any serial execution of the transactions eventually committed. For example, if batch processing techniques are used, a batch may show as closed in the dump without
           all of the items which are in the batch appearing.

           This option will make no difference if there are no read-write transactions active when pg_dump is started. If read-write transactions are active, the start of the dump may be delayed for an indeterminate length of time. Once running,
           performance with or without the switch is the same.

       [1m--snapshot=[4m[22msnapshotname[0m
           Use the specified synchronized snapshot when making a dump of the database (see Table 9.94 for more details).

           This option is useful when needing to synchronize the dump with a logical replication slot (see Chapter 49) or with a concurrent session.

           In the case of a parallel dump, the snapshot name defined by this option is used rather than taking a new snapshot.

       [1m--strict-names[0m
           Require that each extension ([1m-e[22m/[1m--extension[22m), schema ([1m-n[22m/[1m--schema[22m) and table ([1m-t[22m/[1m--table[22m) pattern match at least one extension/schema/table in the database to be dumped. Note that if none of the extension/schema/table patterns find matches,
           pg_dump will generate an error even without [1m--strict-names[22m.

           This option has no effect on [1m-N[22m/[1m--exclude-schema[22m, [1m-T[22m/[1m--exclude-table[22m, or [1m--exclude-table-data[22m. An exclude pattern failing to match any objects is not considered an error.

       [1m--table-and-children=[4m[22mpattern[0m
           This is the same as the [1m-t[22m/[1m--table [22moption, except that it also includes any partitions or inheritance child tables of the table(s) matching the [4mpattern[24m.

       [1m--use-set-session-authorization[0m
           Output SQL-standard [1mSET SESSION AUTHORIZATION [22mcommands instead of [1mALTER OWNER [22mcommands to determine object ownership. This makes the dump more standards-compatible, but depending on the history of the objects in the dump, might not restore
           properly. Also, a dump using [1mSET SESSION AUTHORIZATION [22mwill certainly require superuser privileges to restore correctly, whereas [1mALTER OWNER [22mrequires lesser privileges.

       [1m-?[0m
       [1m--help[0m
           Show help about pg_dump command line arguments, and exit.

       The following command-line options control the database connection parameters.

       [1m-d [4m[22mdbname[0m
       [1m--dbname=[4m[22mdbname[0m
           Specifies the name of the database to connect to. This is equivalent to specifying [4mdbname[24m as the first non-option argument on the command line. The [4mdbname[24m can be a connection string. If so, connection string parameters will override any
           conflicting command line options.

       [1m-h [4m[22mhost[0m
       [1m--host=[4m[22mhost[0m
           Specifies the host name of the machine on which the server is running. If the value begins with a slash, it is used as the directory for the Unix domain socket. The default is taken from the [1mPGHOST [22menvironment variable, if set, else a Unix
           domain socket connection is attempted.

       [1m-p [4m[22mport[0m
       [1m--port=[4m[22mport[0m
           Specifies the TCP port or local Unix domain socket file extension on which the server is listening for connections. Defaults to the [1mPGPORT [22menvironment variable, if set, or a compiled-in default.

       [1m-U [4m[22musername[0m
       [1m--username=[4m[22musername[0m
           User name to connect as.

       [1m-w[0m
       [1m--no-password[0m
           Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a .pgpass file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no
           user is present to enter a password.

       [1m-W[0m
       [1m--password[0m
           Force pg_dump to prompt for a password before connecting to a database.

           This option is never essential, since pg_dump will automatically prompt for a password if the server demands password authentication. However, pg_dump will waste a connection attempt finding out that the server wants a password. In some cases
           it is worth typing [1m-W [22mto avoid the extra connection attempt.

       [1m--role=[4m[22mrolename[0m
           Specifies a role name to be used to create the dump. This option causes pg_dump to issue a [1mSET ROLE [4m[22mrolename[24m command after connecting to the database. It is useful when the authenticated user (specified by [1m-U[22m) lacks privileges needed by
           pg_dump, but can switch to a role with the required rights. Some installations have a policy against logging in directly as a superuser, and use of this option allows dumps to be made without violating the policy.

[1mENVIRONMENT[0m
       [1mPGDATABASE[0m
       [1mPGHOST[0m
       [1mPGOPTIONS[0m
       [1mPGPORT[0m
       [1mPGUSER[0m
           Default connection parameters.

       [1mPG_COLOR[0m
           Specifies whether to use color in diagnostic messages. Possible values are always, auto and never.

       This utility, like most other PostgreSQL utilities, also uses the environment variables supported by libpq (see Section 34.15).

[1mDIAGNOSTICS[0m
       pg_dump internally executes [1mSELECT [22mstatements. If you have problems running pg_dump, make sure you are able to select information from the database using, for example, [1mpsql[22m(1). Also, any default connection settings and environment variables used
       by the libpq front-end library will apply.

       The database activity of pg_dump is normally collected by the cumulative statistics system. If this is undesirable, you can set parameter [4mtrack_counts[24m to false via [1mPGOPTIONS [22mor the ALTER USER command.

[1mNOTES[0m
       If your database cluster has any local additions to the template1 database, be careful to restore the output of pg_dump into a truly empty database; otherwise you are likely to get errors due to duplicate definitions of the added objects. To make
       an empty database without any local additions, copy from template0 not template1, for example:

           CREATE DATABASE foo WITH TEMPLATE template0;

       When a data-only dump is chosen and the option [1m--disable-triggers [22mis used, pg_dump emits commands to disable triggers on user tables before inserting the data, and then commands to re-enable them after the data has been inserted. If the restore is
       stopped in the middle, the system catalogs might be left in the wrong state.

       The dump file produced by pg_dump does not contain the statistics used by the optimizer to make query planning decisions. Therefore, it is wise to run [1mANALYZE [22mafter restoring from a dump file to ensure optimal performance; see Section 25.1.3 and
       Section 25.1.6 for more information.

       Because pg_dump is used to transfer data to newer versions of PostgreSQL, the output of pg_dump can be expected to load into PostgreSQL server versions newer than pg_dump's version.  pg_dump can also dump from PostgreSQL servers older than its own
       version. (Currently, servers back to version 9.2 are supported.) However, pg_dump cannot dump from PostgreSQL servers newer than its own major version; it will refuse to even try, rather than risk making an invalid dump. Also, it is not guaranteed
       that pg_dump's output can be loaded into a server of an older major version ‚Äî not even if the dump was taken from a server of that version. Loading a dump file into an older server may require manual editing of the dump file to remove syntax not
       understood by the older server. Use of the [1m--quote-all-identifiers [22moption is recommended in cross-version cases, as it can prevent problems arising from varying reserved-word lists in different PostgreSQL versions.

       When dumping logical replication subscriptions, pg_dump will generate [1mCREATE SUBSCRIPTION [22mcommands that use the connect = false option, so that restoring the subscription does not make remote connections for creating a replication slot or for
       initial table copy. That way, the dump can be restored without requiring network access to the remote servers. It is then up to the user to reactivate the subscriptions in a suitable way. If the involved hosts have changed, the connection
       information might have to be changed. It might also be appropriate to truncate the target tables before initiating a new full table copy. If users intend to copy initial data during refresh they must create the slot with two_phase = false. After
       the initial sync, the two_phase option will be automatically enabled by the subscriber if the subscription had been originally created with two_phase = true option.

[1mEXAMPLES[0m
       To dump a database called mydb into an SQL-script file:

           $ [1mpg_dump mydb > db.sql[0m

       To reload such a script into a (freshly created) database named newdb:

           $ [1mpsql -d newdb -f db.sql[0m

       To dump a database into a custom-format archive file:

           $ [1mpg_dump -Fc mydb > db.dump[0m

       To dump a database into a directory-format archive:

           $ [1mpg_dump -Fd mydb -f dumpdir[0m

       To dump a database into a directory-format archive in parallel with 5 worker jobs:

           $ [1mpg_dump -Fd mydb -j 5 -f dumpdir[0m

       To reload an archive file into a (freshly created) database named newdb:

           $ [1mpg_restore -d newdb db.dump[0m

       To reload an archive file into the same database it was dumped from, discarding the current contents of that database:

           $ [1mpg_restore -d postgres --clean --create db.dump[0m

       To dump a single table named mytab:

           $ [1mpg_dump -t mytab mydb > db.sql[0m

       To dump all tables whose names start with emp in the detroit schema, except for the table named employee_log:

           $ [1mpg_dump -t 'detroit.emp*' -T detroit.employee_log mydb > db.sql[0m

       To dump all schemas whose names start with east or west and end in gsm, excluding any schemas whose names contain the word test:

           $ [1mpg_dump -n 'east*gsm' -n 'west*gsm' -N '*test*' mydb > db.sql[0m

       The same, using regular expression notation to consolidate the switches:

           $ [1mpg_dump -n '(east|west)*gsm' -N '*test*' mydb > db.sql[0m

       To dump all database objects except for tables whose names begin with ts_:

           $ [1mpg_dump -T 'ts_*' mydb > db.sql[0m

       To specify an upper-case or mixed-case name in [1m-t [22mand related switches, you need to double-quote the name; else it will be folded to lower case (see Patterns). But double quotes are special to the shell, so in turn they must be quoted. Thus, to
       dump a single table with a mixed-case name, you need something like

           $ [1mpg_dump -t "\"MixedCaseName\"" mydb > mytab.sql[0m

[1mSEE ALSO[0m
       [1mpg_dumpall[22m(1), [1mpg_restore[22m(1), [1mpsql[22m(1)

PostgreSQL 16.1                                                                                                              2023                                                                                                                   [4mPG_DUMP[24m(1)
